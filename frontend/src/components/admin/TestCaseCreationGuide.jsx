import { useState } from "react";
import { Card, Collapse, Alert, Tag, Button, Modal } from "antd";
import {
  QuestionCircleOutlined,
  RocketOutlined,
  EditOutlined,
  FileTextOutlined,
  UploadOutlined,
  CheckCircleOutlined,
} from "@ant-design/icons";

const { Panel } = Collapse;

const TestCaseCreationGuide = ({ visible, onClose }) => {
  const [activeKey, setActiveKey] = useState(["1"]);

  const guideData = [
    {
      key: "1",
      title: "üöÄ T·∫°o nhanh v·ªõi Templates",
      icon: <RocketOutlined />,
      content: (
        <div className="space-y-4">
          <Alert
            message="Templates th√¥ng minh - T·∫°o test cases chuy√™n nghi·ªáp"
            type="success"
            showIcon
          />
          
          <div className="space-y-3">
            <h4 className="font-semibold">T√≠nh nƒÉng t·ª± ƒë·ªông:</h4>
            <ul className="list-disc pl-5 space-y-2">
              <li>T·∫°o c·∫•u tr√∫c JSON ho√†n ch·ªânh v·ªõi ƒë√∫ng ki·ªÉu d·ªØ li·ªáu</li>
              <li>Thi·∫øt l·∫≠p thu·ªôc t√≠nh m·∫∑c ƒë·ªãnh (timeLimit: 1000ms, memoryLimit: 262144KB)</li>
              <li>ƒê√°nh d·∫•u 2 test case ƒë·∫ßu l√† v√≠ d·ª•, c√≤n l·∫°i l√† ·∫©n</li>
              <li>T·∫°o m√¥ t·∫£ test case c√≥ √Ω nghƒ©a</li>
            </ul>

            <div className="bg-blue-50 p-4 rounded-lg">
              <h5 className="font-semibold mb-2">üìã Templates c√≥ s·∫µn:</h5>
              <div className="grid grid-cols-2 gap-2">
                <Tag color="blue">Two Sum</Tag>
                <Tag color="green">Array Processing</Tag>
                <Tag color="orange">String Manipulation</Tag>
                <Tag color="purple">Fibonacci</Tag>
                <Tag color="red">Prime Check</Tag>
                <Tag color="cyan">Two Pointers</Tag>
              </div>
            </div>
          </div>
        </div>
      ),
    },
    {
      key: "2", 
      title: "üìù Nh·∫≠p h√†ng lo·∫°t th√¥ng minh",
      icon: <FileTextOutlined />,
      content: (
        <div className="space-y-4">
          <Alert
            message="H·ªá th·ªëng ph√°t hi·ªán ki·ªÉu d·ªØ li·ªáu t·ª± ƒë·ªông"
            type="info"
            showIcon
          />

          <div className="space-y-3">
            <h4 className="font-semibold">ƒê·ªãnh d·∫°ng nh·∫≠p:</h4>
            <pre className="bg-gray-100 p-3 rounded text-sm">
{`INPUT: hello | OUTPUT: olleh | DESC: Test v·ªõi chu·ªói ƒë∆°n gi·∫£n
INPUT: | OUTPUT: | DESC: Test v·ªõi chu·ªói r·ªóng
INPUT: 12345 | OUTPUT: 54321 | DESC: Test v·ªõi chu·ªói s·ªë
INPUT: [1,2,3] | OUTPUT: [3,2,1] | DESC: Test v·ªõi m·∫£ng
INPUT: true | OUTPUT: false | DESC: Test v·ªõi boolean`}
            </pre>

            <div className="bg-green-50 p-4 rounded-lg">
              <h5 className="font-semibold mb-2">üéØ Ph√°t hi·ªán ki·ªÉu d·ªØ li·ªáu:</h5>
              <div className="space-y-1 text-sm">
                <div><code>"hello"</code> ‚Üí <Tag color="blue">string</Tag></div>
                <div><code>123</code> ‚Üí <Tag color="green">int</Tag></div>
                <div><code>12.5</code> ‚Üí <Tag color="orange">double</Tag></div>
                <div><code>true/false</code> ‚Üí <Tag color="purple">boolean</Tag></div>
                <div><code>[1,2,3]</code> ‚Üí <Tag color="red">array</Tag></div>
              </div>
            </div>
          </div>
        </div>
      ),
    },
    {
      key: "3",
      title: "üìä Import CSV th√¥ng minh", 
      icon: <UploadOutlined />,
      content: (
        <div className="space-y-4">
          <Alert
            message="X·ª≠ l√Ω CSV v·ªõi ph√°t hi·ªán ki·ªÉu d·ªØ li·ªáu t·ª± ƒë·ªông"
            type="warning"
            showIcon
          />

          <div className="space-y-3">
            <h4 className="font-semibold">ƒê·ªãnh d·∫°ng CSV:</h4>
            <div className="bg-gray-100 p-3 rounded">
              <div className="text-sm font-semibold mb-2">Input,Output,Description</div>
              <pre className="text-sm">
{`"hello","olleh","Test v·ªõi chu·ªói ƒë∆°n gi·∫£n"
"","","Test v·ªõi chu·ªói r·ªóng"
"12345","54321","Test v·ªõi chu·ªói s·ªë"
"[1,2,3]","[3,2,1]","Test v·ªõi m·∫£ng"
"true","false","Test v·ªõi boolean"
"3.14","41.3","Test v·ªõi s·ªë th·ª±c"`}
              </pre>
            </div>

            <div className="bg-yellow-50 p-4 rounded-lg">
              <h5 className="font-semibold mb-2">üí° L∆∞u √Ω quan tr·ªçng:</h5>
              <ul className="list-disc pl-5 space-y-1 text-sm">
                <li>S·ª≠ d·ª•ng d·∫•u ngo·∫∑c k√©p cho gi√° tr·ªã c√≥ ch·ª©a d·∫•u ph·∫©y</li>
                <li>H·ªá th·ªëng t·ª± ƒë·ªông x·ª≠ l√Ω k√Ω t·ª± ƒë·∫∑c bi·ªát</li>
                <li>2 test case ƒë·∫ßu s·∫Ω l√† v√≠ d·ª•, c√≤n l·∫°i l√† ·∫©n</li>
                <li>T·ª± ƒë·ªông thi·∫øt l·∫≠p timeLimit, memoryLimit, comparisonMode</li>
              </ul>
            </div>
          </div>
        </div>
      ),
    },
    {
      key: "4",
      title: "‚úèÔ∏è Ch·ªânh s·ª≠a th·ªß c√¥ng",
      icon: <EditOutlined />,
      content: (
        <div className="space-y-4">
          <Alert
            message="Validation th·ªùi gian th·ª±c v√† auto-fix th√¥ng minh"
            type="success"
            showIcon
          />

          <div className="space-y-3">
            <h4 className="font-semibold">T√≠nh nƒÉng n√¢ng cao:</h4>
            <ul className="list-disc pl-5 space-y-2">
              <li><strong>Validation th·ªùi gian th·ª±c:</strong> Ki·ªÉm tra l·ªói ngay khi nh·∫≠p</li>
              <li><strong>Auto-fix JSON:</strong> T·ª± ƒë·ªông s·ª≠a l·ªói ƒë·ªãnh d·∫°ng JSON</li>
              <li><strong>Smart suggestions:</strong> G·ª£i √Ω c·∫£i thi·ªán test cases</li>
              <li><strong>Complete structure:</strong> Form ƒë·∫ßy ƒë·ªß t·∫•t c·∫£ thu·ªôc t√≠nh</li>
            </ul>

            <div className="bg-green-50 p-4 rounded-lg">
              <h5 className="font-semibold mb-2">üìã Thu·ªôc t√≠nh ƒë·∫ßy ƒë·ªß:</h5>
              <div className="grid grid-cols-2 gap-2 text-sm">
                <div>‚Ä¢ inputData (JSON)</div>
                <div>‚Ä¢ inputType</div>
                <div>‚Ä¢ outputType</div>
                <div>‚Ä¢ expectedOutputData (JSON)</div>
                <div>‚Ä¢ description</div>
                <div>‚Ä¢ isExample</div>
                <div>‚Ä¢ isHidden</div>
                <div>‚Ä¢ timeLimit</div>
                <div>‚Ä¢ memoryLimit</div>
                <div>‚Ä¢ weight</div>
                <div>‚Ä¢ testOrder</div>
                <div>‚Ä¢ comparisonMode</div>
                <div>‚Ä¢ epsilon (cho s·ªë th·ª±c)</div>
              </div>
            </div>
          </div>
        </div>
      ),
    },
    {
      key: "5",
      title: "üîÑ Quy tr√¨nh l√†m vi·ªác",
      icon: <CheckCircleOutlined />,
      content: (
        <div className="space-y-4">
          <Alert
            message="Quy tr√¨nh t·∫°o test cases hi·ªáu qu·∫£"
            type="info"
            showIcon
          />

          <div className="space-y-4">
            <div className="bg-blue-50 p-4 rounded-lg">
              <h5 className="font-semibold mb-3">üìã Quy tr√¨nh ƒë·ªÅ xu·∫•t:</h5>
              <div className="space-y-3">
                <div className="flex items-start space-x-3">
                  <div className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold">1</div>
                  <div>
                    <div className="font-semibold">Ch·ªçn ph∆∞∆°ng ph√°p t·∫°o</div>
                    <div className="text-sm text-gray-600">Templates ‚Üí Bulk Input ‚Üí CSV ‚Üí Manual</div>
                  </div>
                </div>
                
                <div className="flex items-start space-x-3">
                  <div className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold">2</div>
                  <div>
                    <div className="font-semibold">T·∫°o test cases c∆° b·∫£n</div>
                    <div className="text-sm text-gray-600">H·ªá th·ªëng t·ª± ƒë·ªông t·∫°o c·∫•u tr√∫c ho√†n ch·ªânh</div>
                  </div>
                </div>

                <div className="flex items-start space-x-3">
                  <div className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold">3</div>
                  <div>
                    <div className="font-semibold">Ch·ªânh s·ª≠a th·ªß c√¥ng</div>
                    <div className="text-sm text-gray-600">Fine-tune trong tab "Ch·ªânh s·ª≠a th·ªß c√¥ng"</div>
                  </div>
                </div>

                <div className="flex items-start space-x-3">
                  <div className="bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold">4</div>
                  <div>
                    <div className="font-semibold">Validation v√† submit</div>
                    <div className="text-sm text-gray-600">Ki·ªÉm tra validation v√† t·∫°o b√†i to√°n</div>
                  </div>
                </div>
              </div>
            </div>

            <div className="bg-green-50 p-4 rounded-lg">
              <h5 className="font-semibold mb-2">‚úÖ K·∫øt qu·∫£ cu·ªëi c√πng:</h5>
              <ul className="list-disc pl-5 space-y-1 text-sm">
                <li>Test cases c√≥ c·∫•u tr√∫c JSON ho√†n ch·ªânh</li>
                <li>ƒê√∫ng ƒë·ªãnh d·∫°ng API y√™u c·∫ßu</li>
                <li>Validation ƒë·∫ßy ƒë·ªß v√† ch√≠nh x√°c</li>
                <li>S·∫µn s√†ng submit t·ªõi backend</li>
              </ul>
            </div>
          </div>
        </div>
      ),
    },
  ];

  return (
    <Modal
      title="üìö H∆∞·ªõng d·∫´n t·∫°o Test Cases - H·ªá th·ªëng th√¥ng minh"
      open={visible}
      onCancel={onClose}
      footer={[
        <Button key="close" type="primary" onClick={onClose}>
          ƒê√£ hi·ªÉu
        </Button>
      ]}
      width={800}
      style={{ top: 20 }}
    >
      <div className="space-y-4">
        <Alert
          message="üéØ H·ªá th·ªëng t·∫°o test cases ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p"
          description="T·ª± ƒë·ªông ph√°t hi·ªán ki·ªÉu d·ªØ li·ªáu, t·∫°o c·∫•u tr√∫c JSON ho√†n ch·ªânh, v√† ƒë·ªìng b·ªô gi·ªØa c√°c tab"
          type="success"
          showIcon
        />

        <Collapse
          activeKey={activeKey}
          onChange={setActiveKey}
          size="large"
        >
          {guideData.map((item) => (
            <Panel
              header={
                <div className="flex items-center space-x-2">
                  {item.icon}
                  <span className="font-semibold">{item.title}</span>
                </div>
              }
              key={item.key}
            >
              {item.content}
            </Panel>
          ))}
        </Collapse>
      </div>
    </Modal>
  );
};

export default TestCaseCreationGuide;
