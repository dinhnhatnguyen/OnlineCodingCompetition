spring.application.name=onlineCodingCompetition

# Server configuration
server.port=8080

# Database configuration
# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5431/occs_db
spring.datasource.username=postgres
spring.datasource.password=pass12345
#spring.datasource.password=123456789
spring.datasource.driver-class-name=org.postgresql.Driver

# Hikari Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Increase transaction timeout
spring.transaction.default-timeout=120
# Add database validation query
spring.datasource.hikari.connection-test-query=SELECT 1

# Docker configuration
#docker.timeout.seconds=10
#docker.host=tcp://localhost:2375

# Docker settings
docker.timeout=10
docker.code.path=/tmp/code
app.execution.workdir=/tmp/code
docker.host=unix:///var/run/docker.sock
docker.timeout.seconds=30


spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT
#jwt.auth.secret_key=${JWT_KEY}
#jwt.auth.expires_in=86400000
app.jwtSecret=${JWT_SECRET}
app.jwtExpirationMs=86400000

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springdoc=DEBUG
logging.level.root=INFO

# Logging Configuration
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.com.occs=DEBUG

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Spring Security
spring.security.filter.order=10



# Code Execution Configuration
code.execution.timeoutSeconds=10
code.execution.memoryLimitMB=256


# Submission Configuration
submission.testcase.timeout.seconds=20
submission.debug.mode=false

# Logging Configuration
logging.level.oj.onlineCodingCompetition=INFO
logging.level.com.github.dockerjava=WARN
logging.level.org.springframework=INFO

#AWS


# application.properties
cloud.aws.region.static=ap-southeast-2
cloud.aws.credentials.access-key=${ACCESS_KEY}
cloud.aws.credentials.secret-key=${SECRET_KEY}
cloud.aws.sqs.queue-url=https://sqs.ap-southeast-2.amazonaws.com/183631344191/OCCS


aws.sqs.queue-url=https://sqs.ap-southeast-2.amazonaws.com/183631344191/OCCS



spring.jpa.properties.hibernate.cache.use_second_level_cache=false

spring.jpa.properties.hibernate.connection.isolation=2 # READ_COMMITTED



# K�ch ho?t OpenAPI
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# ???ng d?n
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Qu�t c�c package
springdoc.packagesToScan=oj.onlineCodingCompetition
springdoc.pathsToMatch=/api/**

# Google Translate API
google.translate.api.key=${TRAN_API_KEY}

# C?u h�nh th�m
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=method


